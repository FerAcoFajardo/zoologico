/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;

import exceptions.BusinessException;
import exceptions.DAOException;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import objetonegocio.Animal;
import objetonegocio.Cuidador;
import objetonegocio.Especie;
import objetonegocio.Habitat;
import reglas_negocio.FabricaNegocios;
import reglas_negocio.iNegocios;

/**
 *
 * @author fernando
 */
public class FrmPantallaRegistroEspecie extends javax.swing.JDialog {

    private static FrmPantallaRegistroEspecie instancia;
    private static Especie especie;
    private iNegocios iNegocios = FabricaNegocios.crearNegocios();
    private DefaultListModel mdlDisponibles;
    private DefaultListModel mdlSeleccionados = new DefaultListModel();

    /**
     * Creates new form FrmPantallaRegistroEspecie
     */
    private FrmPantallaRegistroEspecie(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
 
        
    }

    public static FrmPantallaRegistroEspecie getInstance(java.awt.Frame parent) {
        if (instancia == null) {
            instancia = new FrmPantallaRegistroEspecie(parent, true);
            especie = new Especie();
        }
        
        return instancia;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNombreNormal = new javax.swing.JTextField();
        txtNombreCientifico = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtADescripcion = new javax.swing.JTextArea();
        btnEditarAnimal = new javax.swing.JButton();
        btnRegistrarActualizar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cmbHabitat = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cmbCuidador = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtNumAnimales = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Nombre normal");

        jLabel2.setText("Nombre cientifico");

        txtNombreCientifico.setEnabled(false);

        jLabel3.setText("Descripci√≥n");

        txtADescripcion.setColumns(20);
        txtADescripcion.setRows(5);
        txtADescripcion.setEnabled(false);
        jScrollPane1.setViewportView(txtADescripcion);

        btnEditarAnimal.setText("Editar Animales");
        btnEditarAnimal.setEnabled(false);
        btnEditarAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clkMostrarEditarAnimales(evt);
            }
        });

        btnRegistrarActualizar.setText("Registrar/Actualizar");
        btnRegistrarActualizar.setEnabled(false);
        btnRegistrarActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clkBotonGuardar(evt);
            }
        });

        jLabel4.setText("Habitat");

        cmbHabitat.setEnabled(false);

        jLabel5.setText("Cuidador");

        cmbCuidador.setEnabled(false);

        jButton3.setText("Verificar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clkBotonVerificarExistencia(evt);
            }
        });

        jLabel6.setText("Numero de animales");

        txtNumAnimales.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(txtNumAnimales))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(cmbCuidador, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(cmbHabitat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btnRegistrarActualizar)
                    .addComponent(btnEditarAnimal)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombreCientifico))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtNombreNormal)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNombreNormal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombreCientifico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtNumAnimales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbHabitat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(cmbCuidador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(btnEditarAnimal)
                .addGap(32, 32, 32)
                .addComponent(btnRegistrarActualizar)
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clkBotonVerificarExistencia(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clkBotonVerificarExistencia
        // TODO add your handling code here:
        
        try {
            Especie especie = verificaExistencia();
            if (especie != null) {
                llenaCamposInfo(especie);
                throw new BusinessException("La especie ya existe");
            } else {
                activaCampos();
            }

        } catch (DAOException ex) {
            muestraMsjError(ex.getMessage(), JOptionPane.ERROR_MESSAGE);
        } catch (BusinessException ex) {
            muestraMsjError(ex.getMessage(), JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_clkBotonVerificarExistencia

    private void clkMostrarEditarAnimales(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clkMostrarEditarAnimales
        try {
            // TODO add your handling code here:

            List<Animal> listaAnimales = iNegocios.recuperarAnimales(especie.getId());
            FrmEditarAnimales frmEditarAnimales = FrmEditarAnimales.getInstance(this, especie);
            frmEditarAnimales.despliegaInformacion(listaAnimales);
        } catch (DAOException ex) {
            muestraMsjError(ex.getMessage(), JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_clkMostrarEditarAnimales

    private void clkBotonGuardar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clkBotonGuardar
        try {
            // TODO add your handling code here:
            this.getEspecie().verificarCampos();
            iNegocios.guadarEspecie(especie);
        } catch (BusinessException | DAOException ex) {
            muestraMsjError(ex.getMessage(), JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_clkBotonGuardar

    public void activaCampos(){
        this.txtADescripcion.setEnabled(true);
        this.txtNombreCientifico.setEnabled(true);
        this.txtNombreNormal.setEnabled(true);
        this.cmbCuidador.setEnabled(true);
        this.cmbHabitat.setEnabled(true);
        this.btnEditarAnimal.setEnabled(true);
        this.btnRegistrarActualizar.setEnabled(true);
    }

    public Especie getEspecie() {
        return especie;
    }

    public void setEspecie(Especie especie) {
        FrmPantallaRegistroEspecie.especie = especie;
    }
    
    public void actualizarNumAnimales(int num){
        txtNumAnimales.setText(String.valueOf(num));
    }
    
    
    
    public void muestraMsjError(String mensaje, int mode) {
        JOptionPane.showMessageDialog(this, mensaje, "Error", mode);
    }

    public void llenaCamposInfo(Especie especie) {
         this.txtADescripcion.setText(especie.getDescripcion());
         this.txtNombreCientifico.setText(especie.getNombreCientifico());
         this.txtNombreNormal.setText(especie.getNombreNormal());
         for (int i = 0; i < cmbCuidador.getItemCount(); i++) {
            if(cmbCuidador.getItemAt(i).getNombre().equals(especie.getListaCuidadoresEspecie().get(i).getCuidador().getNombre())){
                cmbCuidador.setSelectedIndex(i);
            }
        }
         for (int i = 0; i < cmbHabitat.getItemCount(); i++) {
            if(cmbHabitat.getItemAt(i).getNombre().equals(especie.getHabitat().getNombre())){
                cmbHabitat.setSelectedIndex(i);
            }
        }
    }

    public Especie verificaExistencia() throws DAOException, BusinessException {

        return iNegocios.buscarEspecie(txtNombreNormal.getText());
    }

    public void despliegaInformacion(List<List> datos) throws Exception {
        if (datos.isEmpty()) {
            throw new BusinessException("La lista de datos esta vacia");
        }

        for (int i = 0; i < datos.size(); i++) {
            if (datos.get(i).get(0).getClass() == Habitat.class) {
                datos.get(i).forEach(habitat -> {
                    this.cmbHabitat.addItem((Habitat) habitat);
                });
            }
            if (datos.get(i).get(0).getClass() == Cuidador.class) {
                for (Object cuidador : (((List) datos.get(i)))) {
                    this.cmbCuidador.addItem((Cuidador) cuidador);
                }
            }
        }
        this.setVisible(true);
        this.setLocationRelativeTo(null);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditarAnimal;
    private javax.swing.JButton btnRegistrarActualizar;
    private javax.swing.JComboBox<Cuidador> cmbCuidador;
    private javax.swing.JComboBox<Habitat> cmbHabitat;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtADescripcion;
    private javax.swing.JTextField txtNombreCientifico;
    private javax.swing.JTextField txtNombreNormal;
    private javax.swing.JTextField txtNumAnimales;
    // End of variables declaration//GEN-END:variables
}
