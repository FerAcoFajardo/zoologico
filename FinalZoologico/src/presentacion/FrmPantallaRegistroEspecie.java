/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;

import exceptions.BusinessException;
import exceptions.DAOException;
import java.awt.event.KeyEvent;
import java.awt.geom.RoundRectangle2D;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import objetonegocio.Conocimiento;
import objetonegocio.Cuidador;
import objetonegocio.CuidadorEspecie;
import objetonegocio.Especie;
import objetonegocio.Habitat;
import org.bson.types.ObjectId;
import reglas_negocio.iNegocios;

/**
 *
 * @author fernando
 */
public class FrmPantallaRegistroEspecie extends javax.swing.JDialog {

    private static FrmPantallaRegistroEspecie instancia;
    private Especie especie;
    private iNegocios iNegocios;
    private DefaultTableModel mdlCuidadorEspecie;
    private DefaultTableModel mdlHabitats;

    /**
     * Creates new form FrmPantallaRegistroEspecie
     */
    private FrmPantallaRegistroEspecie(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        // Ventana con bordes redondeados
        
        this.setShape(new RoundRectangle2D.Double(0, 0, this.getBounds().width, this.getBounds().height, 30, 30));
        this.txtADescripcion.setEnabled(false);
        this.txtNombreCientifico.setEnabled(false);
        this.txtNumAnimales.setEnabled(false);
        //this.cmbCuidador.setEnabled(false);
        this.btnEditarAnimal.setEnabled(false);
        this.btnRegistrarActualizar.setEnabled(false);
        especie = new Especie();

    }

    public static FrmPantallaRegistroEspecie getInstance(java.awt.Frame parent) {
        if (instancia == null) {
            instancia = new FrmPantallaRegistroEspecie(parent, true);
        }
        return instancia;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnExit = new javax.swing.JLabel();
        labelCabecera = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNumAnimales = new javax.swing.JTextField();
        btnEditarAnimal = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtADescripcion = new javax.swing.JTextArea();
        txtNombreNormal = new javax.swing.JTextField();
        txtNombreCientifico = new javax.swing.JTextField();
        btnRegistrarActualizar = new javax.swing.JButton();
        btnVerificarExistencia = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblCuidadorEspecie = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblHabitats = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registrar/Actualizar especie");
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1090, 610));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(23, 100, 191));
        jPanel2.setPreferredSize(new java.awt.Dimension(481, 60));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_cancel_40px.png"))); // NOI18N
        btnExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnExitMouseReleased(evt);
            }
        });
        jPanel2.add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 10, 40, 40));

        labelCabecera.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        labelCabecera.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                labelCabeceraMouseDragged(evt);
            }
        });
        labelCabecera.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                labelCabeceraMousePressed(evt);
            }
        });
        jPanel2.add(labelCabecera, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1090, 60));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Registro / Actualización de especies");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, 40));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1160, -1));

        jPanel3.setBackground(new java.awt.Color(49, 58, 73));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nombre normal");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        txtNumAnimales.setEditable(false);
        txtNumAnimales.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtNumAnimales.setText("0");
        jPanel3.add(txtNumAnimales, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 130, 190, -1));

        btnEditarAnimal.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnEditarAnimal.setText("Editar Animales");
        btnEditarAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clkMostrarEditarAnimales(evt);
            }
        });
        jPanel3.add(btnEditarAnimal, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 470, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombre cientifico");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Num de animales");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Descripción");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, -1));

        jScrollPane1.setBackground(new java.awt.Color(204, 204, 204));

        txtADescripcion.setColumns(20);
        txtADescripcion.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtADescripcion.setRows(5);
        txtADescripcion.setEnabled(false);
        jScrollPane1.setViewportView(txtADescripcion);

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 550, 210));

        txtNombreNormal.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtNombreNormal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreNormalKeyPressed(evt);
            }
        });
        jPanel3.add(txtNombreNormal, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 30, 190, -1));

        txtNombreCientifico.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jPanel3.add(txtNombreCientifico, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 80, 190, -1));

        btnRegistrarActualizar.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnRegistrarActualizar.setText("Registrar/Actualizar");
        btnRegistrarActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clkBotonGuardar(evt);
            }
        });
        jPanel3.add(btnRegistrarActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 470, -1, -1));

        btnVerificarExistencia.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnVerificarExistencia.setText("Verificar");
        btnVerificarExistencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clkBotonVerificarExistencia(evt);
            }
        });
        jPanel3.add(btnVerificarExistencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 30, -1, -1));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 700, 550));

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Cuidadores disponibles");

        tblCuidadorEspecie.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cuidador", "Experto", "Seleccionado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblCuidadorEspecie.setEnabled(false);
        jScrollPane4.setViewportView(tblCuidadorEspecie);

        tblHabitats.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Habitat", "Seleccionado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblHabitats.setEnabled(false);
        jScrollPane2.setViewportView(tblHabitats);

        jLabel8.setBackground(new java.awt.Color(0, 0, 0));
        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Habitats disponibles");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(42, 42, 42)))
                .addContainerGap())
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 60, 460, 550));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(1160, 610));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    //Codigo inutil
    private void clkMostrarEditarAnimales(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clkMostrarEditarAnimales
        // TODO add your handling code here:

        FrmEditarAnimales frmEditarAnimales = FrmEditarAnimales.getInstance(this);
        if (especie.getAnimales() == null || especie.getAnimales().isEmpty()) {
            frmEditarAnimales.despliegaInformacion(new ArrayList<>());
        } else {
            frmEditarAnimales.despliegaInformacion(especie.getAnimales());
        }


    }//GEN-LAST:event_clkMostrarEditarAnimales

    private void clkBotonGuardar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clkBotonGuardar
        guardarEspecie();

    }//GEN-LAST:event_clkBotonGuardar

    public void guardarEspecie() {
        try {
            //especie = new Especie();
            List<CuidadorEspecie> cuidadorEspecie = new ArrayList<>();
            List<ObjectId> habitats = new ArrayList<>();
            especie.setNombreNormal(this.txtNombreNormal.getText());
            especie.setNombreCientifico(this.txtNombreCientifico.getText());
            especie.setDescripcion(this.txtADescripcion.getText());

            for (int i = 0; i < tblCuidadorEspecie.getRowCount(); i++) {
                if (tblCuidadorEspecie.getValueAt(i, 2).equals(true)) {
                    if (tblCuidadorEspecie.getValueAt(i, 1).equals(true)) {
                        cuidadorEspecie.add(new CuidadorEspecie(((Cuidador) tblCuidadorEspecie.getValueAt(i, 0)).getId(), Conocimiento.EXPERTO));
                    } else {
                        cuidadorEspecie.add(new CuidadorEspecie(((Cuidador) tblCuidadorEspecie.getValueAt(i, 0)).getId(), Conocimiento.BASICO));
                    }

                }
            }
            for (int i = 0; i < tblHabitats.getRowCount(); i++) {
                if (tblHabitats.getValueAt(i, 1).equals(true)) {
                    habitats.add(((Habitat)tblHabitats.getValueAt(i, 0)).getId());
                }
            }
            especie.setListaCuidadoresEspecie(cuidadorEspecie);
            especie.setHabitat(habitats);

            especie.verificarCampos();

            iNegocios.guadarEspecie(especie);
            JOptionPane.showMessageDialog(this, "Se creo exitosamente la especie"+especie.getNombreNormal(), "Creado exitosamente", JOptionPane.INFORMATION_MESSAGE);
        } catch (DAOException | BusinessException e) {
            muestraMsjError(e.getMessage(), JOptionPane.ERROR_MESSAGE);
        }
    }

    //Codigo para verificar existencia
    private void clkBotonVerificarExistencia(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clkBotonVerificarExistencia
        verificarExistencia();
    }//GEN-LAST:event_clkBotonVerificarExistencia

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        this.instancia = null;
    }//GEN-LAST:event_formWindowClosed

    private void labelCabeceraMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelCabeceraMouseDragged
        this.setLocation(this.getLocation().x + evt.getX() - x, this.getLocation().y + evt.getY() - y);
    }//GEN-LAST:event_labelCabeceraMouseDragged

    private void labelCabeceraMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelCabeceraMousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_labelCabeceraMousePressed

    private void btnExitMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseReleased
        this.instancia = null;
        dispose();
    }//GEN-LAST:event_btnExitMouseReleased

    private void txtNombreNormalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreNormalKeyPressed
        // TODO add your handling code here:

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            verificarExistencia();
        }
    }//GEN-LAST:event_txtNombreNormalKeyPressed

    public void activaCampos() {
        this.txtADescripcion.setEnabled(true);
        this.txtNombreCientifico.setEnabled(true);
        this.txtNumAnimales.setEnabled(true);
        this.tblHabitats.setEnabled(true);
        this.btnEditarAnimal.setEnabled(true);
        this.btnRegistrarActualizar.setEnabled(true);
        this.tblCuidadorEspecie.setEnabled(true);

    }

    public void actualizarNumAnimales(int num) {
        txtNumAnimales.setText(String.valueOf(num));
    }

    public void muestraMsjError(String mensaje, int mode) {
        JOptionPane.showMessageDialog(this, mensaje, "Error", mode);
    }

    public void llenaCamposInfo(Especie especie) {
        this.txtADescripcion.setText(especie.getDescripcion());
        this.txtNombreCientifico.setText(especie.getNombreCientifico());
        this.txtNombreNormal.setText(especie.getNombreNormal());

//         for (int i = 0; i < cmbCuidador.getItemCount(); i++) {
//            if(cmbCuidador.getItemAt(i).getNombre().equals(especie.getListaCuidadoresEspecie().get(i).getCuidador().getNombre())){
//                cmbCuidador.setSelectedIndex(i);
//            }
//        }
//         for (int i = 0; i < cmbHabitat.getItemCount(); i++) {
//            if(cmbHabitat.getItemAt(i).getNombre().equals(especie.getHabitat().getNombre())){
//                cmbHabitat.setSelectedIndex(i);
//            }
//        }
    }

    public Especie verificaExistencia() throws DAOException {

        return iNegocios.buscarEspecie(txtNombreNormal.getText());
    }

    public void despliegaInformacion(List<List> datos, iNegocios iNegocios) throws Exception {
        if (datos.isEmpty()) {

            throw new Exception("No se pudo recuperar algun dato");
        } else {
            for (List dato : datos) {
                if (dato.isEmpty()) {
                    throw new Exception("No se pudo recuperar un dato");
                }
            }
        }
        this.iNegocios = iNegocios;

        for (int i = 0; i < datos.size(); i++) {
            mdlHabitats = (DefaultTableModel)this.tblHabitats.getModel();
            if (datos.get(i).get(0).getClass() == Habitat.class) {
                datos.get(i).forEach(habitat -> {
                    Object[] row = new Object[2];
                    row[0] = habitat;
                    row[1] = false;
                    mdlHabitats.addRow(row);
                });
            }

            if (datos.get(i).get(0).getClass() == Cuidador.class) {
                mdlCuidadorEspecie = (DefaultTableModel) this.tblCuidadorEspecie.getModel();
                for (Cuidador cuidador : (List<Cuidador>) datos.get(i)) {
                    Object[] row = new Object[3];
                    row[0] = cuidador;
                    row[1] = false;
                    row[2] = false;
                    mdlCuidadorEspecie.addRow(row);
                }
                this.tblCuidadorEspecie.setModel(mdlCuidadorEspecie);
                this.tblHabitats.setModel(mdlHabitats);
            }

        }
        this.setVisible(true);
        this.setLocationRelativeTo(null);

    }

    public Especie getEspecie() {
        return especie;
    }

    public void setEspecie(Especie especie) {
        this.especie = especie;
    }

    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditarAnimal;
    private javax.swing.JLabel btnExit;
    private javax.swing.JButton btnRegistrarActualizar;
    private javax.swing.JButton btnVerificarExistencia;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel labelCabecera;
    private javax.swing.JTable tblCuidadorEspecie;
    private javax.swing.JTable tblHabitats;
    private javax.swing.JTextArea txtADescripcion;
    private javax.swing.JTextField txtNombreCientifico;
    private javax.swing.JTextField txtNombreNormal;
    private javax.swing.JTextField txtNumAnimales;
    // End of variables declaration//GEN-END:variables
    private boolean exist = false;
    int x, y;

    private void verificarExistencia() {
        try {
            if(txtNombreNormal.getText() == null || txtNombreNormal.getText().equals("") || txtNombreNormal.getText().equals(" ")){
                muestraMsjError("Debe llenar el nombre", JOptionPane.WARNING_MESSAGE);
                return;
            }
            especie = verificaExistencia();
            if (especie != null) {
                //this.exist = true;
                llenaCamposInfo(especie);
                muestraMsjError("La especie ya existe", JOptionPane.WARNING_MESSAGE);
                return;
            }
            especie = new Especie();
            activaCampos();
        } catch (DAOException ex) {
            System.out.println("pito");

            muestraMsjError(ex.getMessage(), JOptionPane.ERROR_MESSAGE);
        }
    }
}
