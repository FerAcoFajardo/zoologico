/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;

import datePolicy.SampleDateVetoPolicy;
import datePolicy.SampleHighlightPolicy;
import com.github.lgooddatepicker.components.DatePickerSettings;
import com.github.lgooddatepicker.components.TimePickerSettings;
import com.sun.org.apache.xerces.internal.impl.dtd.models.CMBinOp;
import java.time.DayOfWeek;
import java.time.LocalDate;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import objetonegocio.DiaSemana;
import objetonegocio.Horario;
import objetonegocio.Itinerario;
import objetonegocio.Queja;
import reglas_negocio.iNegocios;

/**
 *
 * @author paulb
 */
public class FrmPantallaRegistrarQueja extends javax.swing.JDialog {

    int y, x;
    private DefaultTableModel modeloTablaHoras;
    private static FrmPantallaRegistrarQueja instancia;
    private static Queja queja;
    private iNegocios iNegocios;

    /**
     * Creates new form FrmPantallaRegistrarQuejas
     */
    private FrmPantallaRegistrarQueja(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        modeloTablaHoras = (DefaultTableModel)this.tblHoras.getModel();
    }

    public static FrmPantallaRegistrarQueja getInstance(java.awt.Frame parent) {
        if (instancia == null) {
            instancia = new FrmPantallaRegistrarQueja(parent, true);
            queja = new Queja();
        }
        
        return instancia;
    }

    public void configuracionDatePicker() {
        int rowMultiplier = 4;
        int row = rowMultiplier;
        final LocalDate today = LocalDate.now();
        int pickerNumber = 0;

        // Note: Veto policies can only be set after constructing the date picker.
        DatePickerSettings dateSettings = datePicker1.getSettings().copySettings();
        dateSettings.setAllowKeyboardEditing(false);
        datePicker1.setSettings(dateSettings);

        //prueba forzada
        List<DayOfWeek> dias = Arrays.asList(DayOfWeek.FRIDAY, DayOfWeek.MONDAY);

        dateSettings.setHighlightPolicy(new SampleHighlightPolicy(dias));
        dateSettings.setVetoPolicy(new SampleDateVetoPolicy(dias));
        dateSettings.setDateRangeLimits(today.minusDays(30), today.plusDays(0));
    }

    public void configuracionTimePicker() {
        int rowMultiplier = 4;
        int row = rowMultiplier;
        final LocalDate today = LocalDate.now();
        int pickerNumber = 0;

        // Note: Veto policies can only be set after constructing the date picker.
        DatePickerSettings dateSettings = datePicker1.getSettings().copySettings();
        dateSettings.setAllowKeyboardEditing(false);
        datePicker1.setSettings(dateSettings);

        //prueba forzada
        List<DayOfWeek> dias = Arrays.asList(DayOfWeek.FRIDAY, DayOfWeek.MONDAY);

        dateSettings.setHighlightPolicy(new SampleHighlightPolicy(dias));
        dateSettings.setVetoPolicy(new SampleDateVetoPolicy(dias));
        dateSettings.setDateRangeLimits(today.minusDays(30), today.plusDays(0));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        labelCabecera = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        datePicker1 = new com.github.lgooddatepicker.components.DatePicker();
        cmbItinerarios = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtGuia = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblHoras = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setSize(new java.awt.Dimension(912, 570));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(23, 100, 191));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_cancel_32px_1.png"))); // NOI18N
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel7MouseReleased(evt);
            }
        });
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 10, 30, 30));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Quejas");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, 40));

        labelCabecera.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        labelCabecera.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                labelCabeceraMouseDragged(evt);
            }
        });
        labelCabecera.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                labelCabeceraMousePressed(evt);
            }
        });
        jPanel2.add(labelCabecera, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 910, 60));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, 60));

        jPanel3.setBackground(new java.awt.Color(49, 58, 73));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("Guia");
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        datePicker1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                datePicker1MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                datePicker1MouseReleased(evt);
            }
        });
        jPanel3.add(datePicker1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 80, 220, 30));

        cmbItinerarios.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbItinerariosItemStateChanged(evt);
            }
        });
        jPanel3.add(cmbItinerarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 22, 220, 30));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Itinerarios");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Fecha");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        txtGuia.setEditable(false);
        txtGuia.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jPanel3.add(txtGuia, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 140, 208, -1));

        tblHoras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Horas"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblHoras);

        jPanel3.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 240, 170, 290));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 440, 550));

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel3.setText("Descripción de la queja");
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        jLabel4.setText("Correo electrónico");
        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        jLabel5.setText("Num de teléfono");
        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        jTextField2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        jLabel6.setText("Nombre (opcional)");
        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        jTextField3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        jButton1.setText("Enviar queja");
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        jTextField4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel4)
                                                .addComponent(jLabel5))
                                            .addGap(18, 18, 18))
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addComponent(jLabel6)
                                            .addGap(13, 13, 13)))
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel3)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(jButton1)))
                .addContainerGap(25, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                    .addContainerGap(257, Short.MAX_VALUE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(15, 15, 15)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel3)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(57, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                    .addContainerGap(297, Short.MAX_VALUE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(215, 215, 215)))
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 60, 480, 550));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 912, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 614, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(912, 614));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void labelCabeceraMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelCabeceraMouseDragged
        this.setLocation(this.getLocation().x + evt.getX() - x, this.getLocation().y + evt.getY() - y);
    }//GEN-LAST:event_labelCabeceraMouseDragged

    private void labelCabeceraMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelCabeceraMousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_labelCabeceraMousePressed

    private void jLabel7MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseReleased
        System.exit(0);
    }//GEN-LAST:event_jLabel7MouseReleased

    private void cmbItinerariosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbItinerariosItemStateChanged
        cargarListasDias();
        muestraGuia();
    }//GEN-LAST:event_cmbItinerariosItemStateChanged

    private void datePicker1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_datePicker1MouseReleased
        System.out.println("aaaaaaaaaaaaaaaaa");
        cargarHoras();
        
    }//GEN-LAST:event_datePicker1MouseReleased

    private void datePicker1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_datePicker1MouseClicked
        System.out.println("aaaaaaaaaaaaaaaaa");
        cargarHoras();
    }//GEN-LAST:event_datePicker1MouseClicked

    private void cargarListasDias() {
        int rowMultiplier = 4;
        int row = rowMultiplier;
        final LocalDate today = LocalDate.now();
        int pickerNumber = 0;

        Itinerario itinerarioSeleccionado = ((Itinerario) cmbItinerarios.getSelectedItem());
        List<DayOfWeek> dias = transformarDias(itinerarioSeleccionado);
        
        // Note: Veto policies can only be set after constructing the date picker.
        DatePickerSettings dateSettings = datePicker1.getSettings().copySettings();
        dateSettings.setAllowKeyboardEditing(false);
        datePicker1.setSettings(dateSettings);

        //prueba forzada
        //List<DayOfWeek> dias = Arrays.asList(DayOfWeek.FRIDAY, DayOfWeek.MONDAY);
        dateSettings.setHighlightPolicy(new SampleHighlightPolicy(dias));
        dateSettings.setVetoPolicy(new SampleDateVetoPolicy(dias));
        dateSettings.setDateRangeLimits(today.minusDays(30), today.plusDays(0));
        cargarHoras();
    }

    private List<DayOfWeek> transformarDias(Itinerario itinerarioSeleccionado){
        List<DayOfWeek> dias = new LinkedList<>();
        for (Horario horario : itinerarioSeleccionado.getHorario()) {
            switch (horario.getDia()) {
                case MARTES:
                    dias.add(DayOfWeek.TUESDAY);
                    break;
                case MIERCOLES:
                    dias.add(DayOfWeek.WEDNESDAY);
                    break;
                case JUEVES:
                    dias.add(DayOfWeek.THURSDAY);
                    break;
                case VIERNES:
                    dias.add(DayOfWeek.FRIDAY);
                    break;
                case SABADO:
                    dias.add(DayOfWeek.SATURDAY);
                    break;
                default:
                    break;
            }
        }
        return dias;
    }
    
    private void cargarHoras() {
        LocalDate date = datePicker1.getDate();
        if (date == null) {
            return;
        }
        DayOfWeek diaSeleccinado = date.getDayOfWeek();
        
        Itinerario itinerarioSeleccionado = ((Itinerario) cmbItinerarios.getSelectedItem());
        
        List<DayOfWeek> dias = transformarDias(itinerarioSeleccionado);
        List<Horario> horarios = itinerarioSeleccionado.getHorario();
            
        for (DayOfWeek dia1 : dias) {
            if (dia1 == diaSeleccinado) {
                for (Horario horario : horarios) {
                    DayOfWeek dia = null;
                    switch(horario.getDia()){
                        case MARTES: dia = DayOfWeek.TUESDAY;break;
                        case MIERCOLES: dia = DayOfWeek.WEDNESDAY;break;
                        case JUEVES: dia = DayOfWeek.THURSDAY;break;
                        case VIERNES: dia = DayOfWeek.FRIDAY;break;
                        case SABADO: dia = DayOfWeek.SATURDAY;break;
                        case DOMINGO: dia = DayOfWeek.SUNDAY;break;
                        default:break;
                    }
                    if (dia == dia1) {
                        List<String> horas = horario.getHora();
                        for (String hora : horas) {
                            modeloTablaHoras.addRow(new Object[]{hora});
                        }
                    }
                }
            }
        }
        
        
        
    }

    

    public void muestraGuia() {
        txtGuia.setText(((Itinerario) cmbItinerarios.getSelectedItem()).getNombre());
    }

    public void despliegaInformacion(List<List> datos, iNegocios iNegocios) throws Exception {
        if (datos.isEmpty()) {

            throw new Exception("No se pudo recuperar algun dato");
        } else {
            for (List dato : datos) {
                if (dato.isEmpty()) {
                    throw new Exception("No se pudo recuperar un dato");
                }
            }
        }
        this.iNegocios = iNegocios;

        for (int i = 0; i < datos.size(); i++) {
            if (datos.get(i).get(0).getClass() == Itinerario.class) {
                datos.get(i).forEach(itinerario -> {
                    this.cmbItinerarios.addItem((Itinerario) itinerario);
                });
            }
            /*
            if (datos.get(i).get(0).getClass() == Cuidador.class) {
                for (Object cuidador : (((List) datos.get(i)))) {
                    this.cmbCuidador.addItem((Cuidador) cuidador);
                }
            }
            
        }*/
            //configuracionDatePicker();
            this.setVisible(true);
            this.setLocationRelativeTo(null);

        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Itinerario> cmbItinerarios;
    private com.github.lgooddatepicker.components.DatePicker datePicker1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JLabel labelCabecera;
    private javax.swing.JTable tblHoras;
    private javax.swing.JTextField txtGuia;
    // End of variables declaration//GEN-END:variables

}
